// 4.12.5 동반 객체
// 안드로이드 프래그먼트 커뫂넌트를 다룰 때 자동으로 ㄷ오반 객체 코드가 생선된다.
// 그때 코드를 이해할 수 있도록 동반 객체를 간단히 알아봅시다.

// 프로그먼트는 특수한 제약 때문에 팩토리 메서드를 정의하여 인스턴스를 생성해야 한다.
// 팩토리 메서드는 생성자가 아닌 메서드를 사용해 객체를 생성하는 코딩 패턴을 말하는데
// 클래스와 별개로 보며 포함 관계도 아니다.
// 코틀린에서는 자바의 static과 같은 정적인 메서드를 만들 수 있는 키워드를 제공하지 않는다.
// 대신  동반 객체 (companion object)로 이를 구현한다.

// 다음 코드느 newlnstance() 정적 메서드를 사용해서 Fragment 객체를 생성하는
// 팩토리 패턴을 구현 및 사용하는 예이다.

class Fragment {
    companion object {
        fun newInstance() {
            println("생성됨")
        }
    }
}

val fragment = Fragment.newInstance()

// 여기서 동반 객체 내부의 메서드는 Fragment 클래스와 아무 관계가 없는 정적인 존재이다.
