// 4.11 람다식
// 코틀린은 자바 8과 같이 람다식을 지원한다.
// 람다식은 하나의 함수를 표현하는 방법으로 익명클래스나 익명함수를 간결하게 표현할 수 있어 매우 유용하다.
// 람다식은 코드를 간결하게 해주는 장점이 있지만 디버깅이 어렵고 남발할 경우 오히려 코드 가독성이
// 떨어져 주의하여 사용해야 한다.

// 두 수를 인수로 받아 더해주는 add() 메서드 이다.

fun add(x : Int, y : Int) : Int{
    return x + y
}

// 위의 코드를 반환 자료형을 생략하고 블록{}과 return을 생략 할 수 있습니다.

fun add(x: Int, y: Int) = x + y

// 또한 다음과 같이 표현할 수 있다.
// 코틀린의 람다식은 다음과 같이 항상 중괄호로 둘러 싸여 있다.
// 내용으로 인수 목록을 나열하고 -> 이후에 본문이 위치한다.
// 람다식을 변수에 저장할 수 있고 이러한 변수는 일반 함수처럼 사용할 수 있디.

// { 인수 1: 타입1, 인수2: 타입2 -> 분문}

var add = {x: Int, y: Int -> x + y}

println(add(2,5)) // 7
